resource "aws_security_group" "bastion" {
    vpc_id = "${aws_vpc.nile-vpc.id}"
    name="bastion"
    
   tags ={
    Name            = "bastion"
  }
}


resource "aws_security_group_rule" "inbound_http_bastion" {
  security_group_id = "${aws_security_group.bastion.id}"
  type = "ingress"
  from_port = "80"
  to_port = "80"
  protocol = "tcp"
  cidr_blocks = ["0.0.0.0/0"]
}

resource "aws_security_group_rule" "inbound_https_bastion" {
  security_group_id = "${aws_security_group.bastion.id}"
  type = "ingress"
  from_port = "443"
  to_port = "443"
  protocol = "tcp"
  cidr_blocks = ["0.0.0.0/0"]
}

resource "aws_security_group_rule" "inbound_ssh_bastion" {
  security_group_id = "${aws_security_group.bastion.id}"
  type = "ingress"
  from_port = "22"
  to_port = "22"
  protocol = "tcp"
  cidr_blocks = ["0.0.0.0/0"]
}

resource "aws_security_group" "ec2" {
    vpc_id = "${aws_vpc.nile-vpc.id}"
    name="ec2-internal-traffic"
    
   tags ={
    Name            = "ec2"
  }
}



resource "aws_security_group_rule" "ec2_internal_outbound" {
  security_group_id = "${aws_security_group.ec2.id}"
  description = "Allow All Traffic Among VPC Instances"
  type = "egress"
  from_port = "0"
  to_port = "0"
  protocol = "All"
  cidr_blocks = ["172.31.0.0/16"]
}

resource "aws_security_group_rule" "ec2_internal" {
  security_group_id = "${aws_security_group.ec2.id}"
  description = "Allow All Traffic Among VPC Instances"
  type = "ingress"
  from_port = "0"
  to_port = "0"
  protocol = "All"
  cidr_blocks = ["172.31.0.0/16"]
}










